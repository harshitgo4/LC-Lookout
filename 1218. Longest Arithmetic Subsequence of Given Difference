class Solution {
public:
    int longestSubsequence(vector<int>& arr, int difference) {
        map<int,int> mp;
        mp[arr[0]]=0;
       vector<int> dp(arr.size()+1,1);
       for(int i=1;i<arr.size();i++)
       {
          if(mp.find(arr[i]-difference)!=mp.end())
          {
              auto it=mp.find(arr[i]-difference);
              dp[i]=max(dp[i],1+dp[it->second]);
          }
          mp[arr[i]]=i;
       }
       int mx=1;
       for(auto it:dp)
       {
           mx=max(mx,it);
       }
       return mx;
    }
};
