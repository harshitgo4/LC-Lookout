class Solution {
public:
    int helper(string& s1, int i, string& s2, int j, vector<int>& dp) {
        if (i == s1.size()) {
            int res = 0;
            for (int a = j; a < s2.size(); a++) {
                res += int(s2[a]);
            }
            return res;
        }
        if (j == s2.size()) {
            int res = 0;
            for (int a = i; a < s1.size(); a++) {
                res += int(s1[a]);
            }
            return res;
        }
        int index = i * s2.size() + j;
        if (dp[index] != -1) {
            return dp[index];
        }

        int ans = 0;
        if (s1[i] == s2[j]) {
            ans = helper(s1, i + 1, s2, j + 1, dp);
        } else {
            ans = min(helper(s1, i, s2, j + 1, dp) + int(s2[j]), helper(s1, i + 1, s2, j, dp) + int(s1[i]));
        }
        dp[index] = ans;
        return ans;
    }

    int minimumDeleteSum(string s1, string s2) {
        vector<int> dp(s1.size() * s2.size(), -1);
        return helper(s1, 0, s2, 0, dp);
    }
};
