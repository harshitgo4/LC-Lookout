#include <vector>
#include <unordered_map>
#include <algorithm>

using namespace std;

class Solution {
public:
    long long maximumSubarraySum(vector<int>& nums, int k) {
        long long sum = 0;
        long long i = 0;
        long long j = 0;
        long long mx = 0;
        unordered_map<int,int> mp;
        while (j < nums.size()) {
            if (mp.find(nums[j]) != mp.end()) {
                sum = 0;
                i = mp[nums[j]] + 1;
                j = i;
                mp.clear();
            }
            sum += nums[j];
            mp[nums[j]] = j;
            if (j - i + 1 == k) {
                mx = max(mx, sum);
                sum = sum - nums[i];
                mp.erase(nums[i]);
                i++;
            }
            j++;
        }
        return mx;
    }
};
