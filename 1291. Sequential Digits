class Solution {
public:
    int make_Number(vector<int> &nums,int j,int i)
    {
        int k=i+j;
        if(k>9)
        return 0;
        int Number=0;
        while(j<k)
        {
            Number=Number*10+nums[j];
            j++;
        }
        return Number;
    }
    vector<int> sequentialDigits(int low, int high) {
        vector<int> nums={1,2,3,4,5,6,7,8,9};
        vector<int> ans;
        int minDigits=0;
        int temp=low;
        while(temp)
        {   minDigits++;
            temp=temp/10;
        }
        temp=high;
        int maxDigits=0;
         while(temp)
         {  
             maxDigits++;
            temp=temp/10;
        }
      //  cout<<minDigits<<" "<<maxDigits<<endl;
        for(int i=minDigits;i<=maxDigits;i++)
            {   int number=0;
        {
            for(int j=0;j<9;j++)
                 int k=i+j;
                if(k>9)
                break;
               
                while(j<k)
                {
                    number=number*10+nums[j];
                    j++;
                }
                if(number>=low && number<=high)
                ans.push_back(number);
            }
        }
        return ans;
    }
};
