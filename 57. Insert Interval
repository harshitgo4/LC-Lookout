#include <vector>
using namespace std;

class Solution {
public:
    vector<vector<int>> insert(vector<vector<int>>& intervals, vector<int>& newInterval) {
        int start = 0;
        int end = 0; 
        vector<vector<int>> ans;
        int i = 0;
        
        // Add all intervals that end before newInterval starts
        while (i < intervals.size() && intervals[i][1] < newInterval[0]) {
            ans.push_back(intervals[i]);
            i++;
        }
        
        start = min(intervals[i][0], newInterval[0]);
        // Merge overlapping intervals
        while (i < intervals.size() && intervals[i][0] <= newInterval[1]) {
            i++;
        }
        end = max(intervals[i - 1][1], newInterval[1]);
        ans.push_back({start, end});
        
        // Add all remaining intervals
        while (i < intervals.size()) {
            ans.push_back(intervals[i]);
            i++;
        }
        
        return ans;
    }
};
